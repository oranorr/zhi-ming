import 'package:adapty_flutter/adapty_flutter.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter_secure_storage/flutter_secure_storage.dart';
import 'dart:io';
import 'package:zhi_ming/features/adapty/domain/models/subscription_product.dart';
import 'package:zhi_ming/features/adapty/domain/models/subscription_status.dart';
import 'package:zhi_ming/features/adapty/domain/repositories/adapty_repository.dart';

/// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Adapty SDK
/// –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Adapty –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
/// –ö—ç—à–∏—Ä—É–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
class AdaptyRepositoryImpl implements AdaptyRepository {
  // Singleton pattern
  AdaptyRepositoryImpl._();
  static AdaptyRepositoryImpl? _instance;
  static AdaptyRepositoryImpl get instance =>
      _instance ??= AdaptyRepositoryImpl._();

  static const _storage = FlutterSecureStorage();

  // –ö–ª—é—á–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
  static const String _freeRequestsCountKey = 'free_requests_count';
  static const String _subscriptionStatusKey = 'subscription_status';
  static const String _emulatorSubscriptionKey =
      'emulator_subscription_active'; // [AdaptyRepositoryImpl] –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–µ–π–∫–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ
  static const String _emulatorSubscriptionProductKey =
      'emulator_subscription_product'; // [AdaptyRepositoryImpl] –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ
  static const String _emulatorSubscriptionDateKey =
      'emulator_subscription_date'; // [AdaptyRepositoryImpl] –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –ø–æ–∫—É–ø–∫–∏ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ
  static const String _paywallPlacementId = 'zhi-ming-placement';

  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  static const int _maxFreeRequests = kDebugMode ? 5 : 20;
  static const String _premiumAccessLevel = 'premium';

  bool _isInitialized = false;

  // [AdaptyRepositoryImpl] –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  List<SubscriptionProduct> _cachedProducts = [];
  bool _productsLoaded = false;

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ
  /// [AdaptyRepositoryImpl] –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º—É–ª—è—Ç–æ—Ä –¥–ª—è Android –∏ iOS
  bool get _isRunningOnEmulator {
    try {
      if (Platform.isAndroid) {
        // [AdaptyRepositoryImpl] Android —ç–º—É–ª—è—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–∞–º
        final isEmulator =
            Platform.environment.containsKey('ANDROID_EMULATOR') ||
            Platform.environment['ANDROID_EMULATOR'] == 'true';
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ Android —ç–º—É–ª—è—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∞: $isEmulator',
        );
        return isEmulator;
      } else if (Platform.isIOS) {
        // [AdaptyRepositoryImpl] iOS —Å–∏–º—É–ª—è—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –¢–û–õ–¨–ö–û –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Å–∏–º—É–ª—è—Ç–æ—Ä–∞
        final hasSimulatorEnv =
            Platform.environment.containsKey('SIMULATOR_DEVICE_NAME') ||
            Platform.environment['SIMULATOR_DEVICE_NAME'] != null;

        // [AdaptyRepositoryImpl] –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞
        final hasSimulatorRoot = Platform.environment.containsKey(
          'SIMULATOR_ROOT',
        );
        final hasSimulatorUdid = Platform.environment.containsKey(
          'SIMULATOR_UDID',
        );

        // [AdaptyRepositoryImpl] –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é IPHONE_SIMULATOR_ROOT (—Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ Xcode)
        final hasLegacySimulatorRoot = Platform.environment.containsKey(
          'IPHONE_SIMULATOR_ROOT',
        );

        // [AdaptyRepositoryImpl] –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º kDebugMode –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏–º—É–ª—è—Ç–æ—Ä–∞!
        // –†–µ–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ debug —Ä–µ–∂–∏–º–µ
        final isSimulator =
            hasSimulatorEnv ||
            hasSimulatorRoot ||
            hasSimulatorUdid ||
            hasLegacySimulatorRoot;

        debugPrint('[AdaptyRepositoryImpl] ü§ñ iOS —Å–∏–º—É–ª—è—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏:');
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ   SIMULATOR_DEVICE_NAME: $hasSimulatorEnv',
        );
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ   SIMULATOR_ROOT: $hasSimulatorRoot',
        );
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ   SIMULATOR_UDID: $hasSimulatorUdid',
        );
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ   IPHONE_SIMULATOR_ROOT: $hasLegacySimulatorRoot',
        );
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ   kDebugMode: $kDebugMode (–ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è)',
        );
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ   –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $isSimulator',
        );

        return isSimulator;
      }
      debugPrint(
        '[AdaptyRepositoryImpl] ü§ñ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, —Å—á–∏—Ç–∞–µ–º –ù–ï —ç–º—É–ª—è—Ç–æ—Ä–æ–º',
      );
      return false;
    } catch (e) {
      // [AdaptyRepositoryImpl] –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ù–ï —ç–º—É–ª—è—Ç–æ—Ä
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–º—É–ª—è—Ç–æ—Ä–∞: $e');
      return false;
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
  bool get isInitialized => _isInitialized;

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∫—ç—à
  /// [AdaptyRepositoryImpl] –ü—É–±–ª–∏—á–Ω—ã–π –≥–µ—Ç—Ç–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  bool get areProductsLoaded => _productsLoaded;

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–µ–∑ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  /// [AdaptyRepositoryImpl] –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º –¥–ª—è UI
  List<SubscriptionProduct> get cachedProducts =>
      List.unmodifiable(_cachedProducts);

  /// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  @visibleForTesting
  void reset() {
    _isInitialized = false;
    _productsLoaded = false;
    _cachedProducts.clear();
    _instance = null;
  }

  @override
  Future<void> initialize() async {
    if (_isInitialized) {
      debugPrint('[AdaptyRepositoryImpl] Adapty —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    try {
      debugPrint('[AdaptyRepositoryImpl] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...');

      // Adapty SDK —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ main.dart, –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      final currentCount = await _getRemainingFreeRequests();
      if (currentCount == _maxFreeRequests) {
        final savedCount = await _storage.read(key: _freeRequestsCountKey);
        if (savedCount == null) {
          await _storage.write(
            key: _freeRequestsCountKey,
            value: _maxFreeRequests.toString(),
          );
          debugPrint(
            '[AdaptyRepositoryImpl] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: $_maxFreeRequests',
          );
        }
      }

      // [AdaptyRepositoryImpl] –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      await _preloadProducts();

      _isInitialized = true;
      debugPrint('[AdaptyRepositoryImpl] –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $e');
      rethrow;
    }
  }

  /// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
  /// [AdaptyRepositoryImpl] –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> _preloadProducts() async {
    if (_productsLoaded) {
      debugPrint('[AdaptyRepositoryImpl] –ü—Ä–æ–¥—É–∫—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –∫—ç—à');
      return;
    }

    try {
      debugPrint('[AdaptyRepositoryImpl] üöÄ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');

      // [AdaptyRepositoryImpl] –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      final products = await _fetchProductsFromAdapty();
      _cachedProducts = products;
      _productsLoaded = true;

      debugPrint(
        '[AdaptyRepositoryImpl] ‚úÖ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–æ ${_cachedProducts.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫—ç—à',
      );
    } catch (e) {
      debugPrint('[AdaptyRepositoryImpl] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e');

      // [AdaptyRepositoryImpl] –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –ø—Ä–æ–¥—É–∫—Ç—ã
      _cachedProducts = _getMockProducts();
      _productsLoaded = true;

      debugPrint(
        '[AdaptyRepositoryImpl] üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã mock –ø—Ä–æ–¥—É–∫—Ç—ã: ${_cachedProducts.length}',
      );
    }
  }

  /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  /// [AdaptyRepositoryImpl] –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
  @override
  Future<void> refreshProducts() async {
    try {
      debugPrint(
        '[AdaptyRepositoryImpl] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...',
      );

      final products = await _fetchProductsFromAdapty();
      _cachedProducts = products;

      debugPrint(
        '[AdaptyRepositoryImpl] ‚úÖ –ö—ç—à –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω: ${_cachedProducts.length}',
      );
    } catch (e) {
      debugPrint('[AdaptyRepositoryImpl] ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e');
      // [AdaptyRepositoryImpl] –û—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
  }

  /// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∏–∑ Adapty
  /// [AdaptyRepositoryImpl] –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ Adapty SDK
  Future<List<SubscriptionProduct>> _fetchProductsFromAdapty() async {
    debugPrint('[AdaptyRepositoryImpl] –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ Adapty...');
    debugPrint(
      '[AdaptyRepositoryImpl] –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è placement ID: $_paywallPlacementId',
    );

    // –ü–æ–ª—É—á–∞–µ–º paywall —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
    final paywall = await Adapty().getPaywall(placementId: _paywallPlacementId);

    debugPrint(
      '[AdaptyRepositoryImpl] Paywall –ø–æ–ª—É—á–µ–Ω: ${paywall.placementId}',
    );
    debugPrint('[AdaptyRepositoryImpl] Paywall revision: ${paywall.revision}');

    final products = await Adapty().getPaywallProducts(paywall: paywall);

    debugPrint(
      '[AdaptyRepositoryImpl] –ü–æ–ª—É—á–µ–Ω–æ ${products.length} —Å—ã—Ä—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –æ—Ç Adapty',
    );

    if (products.isEmpty) {
      debugPrint(
        '[AdaptyRepositoryImpl] ‚ö†Ô∏è Paywall –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ Adapty Dashboard',
      );
      debugPrint(
        '[AdaptyRepositoryImpl] üìã Placement ID: $_paywallPlacementId',
      );
      debugPrint('[AdaptyRepositoryImpl] üîÑ Revision: ${paywall.revision}');
    }

    final subscriptionProducts = <SubscriptionProduct>[];

    for (final product in products) {
      debugPrint(
        '[AdaptyRepositoryImpl] –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞: ${product.vendorProductId}',
      );
      final subscriptionProduct = _mapAdaptyProductToSubscriptionProduct(
        product,
      );
      if (subscriptionProduct != null) {
        subscriptionProducts.add(subscriptionProduct);
        debugPrint(
          '[AdaptyRepositoryImpl] ‚úÖ –ü—Ä–æ–¥—É–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω: ${subscriptionProduct.title}',
        );
      } else {
        debugPrint(
          '[AdaptyRepositoryImpl] ‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å: ${product.vendorProductId}',
        );
      }
    }

    debugPrint(
      '[AdaptyRepositoryImpl] –ò—Ç–æ–≥–æ –Ω–∞–π–¥–µ–Ω–æ ${subscriptionProducts.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
    );
    return subscriptionProducts;
  }

  @override
  Future<List<SubscriptionProduct>> getAvailableProducts() async {
    // [AdaptyRepositoryImpl] –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    if (!_productsLoaded) {
      debugPrint(
        '[AdaptyRepositoryImpl] ‚ö†Ô∏è –ü—Ä–æ–¥—É–∫—Ç—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É...',
      );
      await _preloadProducts();
    }

    debugPrint(
      '[AdaptyRepositoryImpl] üì¶ –í–æ–∑–≤—Ä–∞—â–∞–µ–º ${_cachedProducts.length} –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
    );
    return List.from(_cachedProducts);
  }

  @override
  Future<SubscriptionStatus> getSubscriptionStatus() async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏...');

      // [AdaptyRepositoryImpl] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–µ–π–∫–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å
      if (_isRunningOnEmulator) {
        final emulatorSubscriptionActive = await _storage.read(
          key: _emulatorSubscriptionKey,
        );
        if (emulatorSubscriptionActive == 'true') {
          final productId =
              await _storage.read(key: _emulatorSubscriptionProductKey) ??
              'emulator_premium';
          final dateString = await _storage.read(
            key: _emulatorSubscriptionDateKey,
          );
          final purchaseDate =
              dateString != null
                  ? DateTime.tryParse(dateString)
                  : DateTime.now();

          debugPrint(
            '[AdaptyRepositoryImpl] ü§ñ –ù–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –§–ï–ô–ö–û–í–ê–Ø –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ: $productId',
          );

          // [AdaptyRepositoryImpl] –í–æ–∑–≤—Ä–∞—â–∞–µ–º premium —Å—Ç–∞—Ç—É—Å —Å –¥–∞—Ç–æ–π –∏—Å—Ç–µ—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≥–æ–¥ –æ—Ç –ø–æ–∫—É–ø–∫–∏
          return SubscriptionStatus.premium(
            expirationDate: (purchaseDate ?? DateTime.now()).add(
              const Duration(days: 365),
            ),
            subscriptionType: _getEmulatorSubscriptionType(productId),
          );
        }
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ –∏–∑ Adapty
      final profile = await Adapty().getProfile();
      final accessLevels = profile.accessLevels;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º access level "premium")
      final premiumAccess = accessLevels[_premiumAccessLevel];
      final isActive = premiumAccess?.isActive ?? false;

      final remainingFreeRequests = await _getRemainingFreeRequests();

      if (isActive) {
        debugPrint('[AdaptyRepositoryImpl] –ù–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞');
        return SubscriptionStatus.premium(
          expirationDate:
              premiumAccess!.expiresAt ??
              DateTime.now().add(const Duration(days: 365)),
          subscriptionType: _getSubscriptionType(premiumAccess),
        );
      } else {
        debugPrint(
          '[AdaptyRepositoryImpl] –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º',
        );
        return SubscriptionStatus.free(
          remainingFreeRequests: remainingFreeRequests,
          maxFreeRequests: _maxFreeRequests,
        );
      }
    } on Exception catch (e) {
      debugPrint(
        '[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏: $e',
      );

      // [AdaptyRepositoryImpl] –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–µ–π–∫–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
      if (_isRunningOnEmulator) {
        final emulatorSubscriptionActive = await _storage.read(
          key: _emulatorSubscriptionKey,
        );
        if (emulatorSubscriptionActive == 'true') {
          final productId =
              await _storage.read(key: _emulatorSubscriptionProductKey) ??
              'emulator_premium';
          debugPrint(
            '[AdaptyRepositoryImpl] ü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–µ–π–∫–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ: $productId',
          );

          return SubscriptionStatus.premium(
            expirationDate: DateTime.now().add(const Duration(days: 365)),
            subscriptionType: _getEmulatorSubscriptionType(productId),
          );
        }
      }

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      final remainingFreeRequests = await _getRemainingFreeRequests();
      return SubscriptionStatus.free(
        remainingFreeRequests: remainingFreeRequests,
        maxFreeRequests: _maxFreeRequests,
      );
    }
  }

  @override
  Future<bool> purchaseSubscription(String productId) async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏: $productId');
      debugPrint('[AdaptyRepositoryImpl] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–∞...');

      final isEmulator = _isRunningOnEmulator;
      debugPrint(
        '[AdaptyRepositoryImpl] üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–º—É–ª—è—Ç–æ—Ä–∞: $isEmulator',
      );
      debugPrint('[AdaptyRepositoryImpl] üîç Platform.isIOS: ${Platform.isIOS}');
      debugPrint('[AdaptyRepositoryImpl] üîç kDebugMode: $kDebugMode');

      // [AdaptyRepositoryImpl] –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ - —Å—Ä–∞–∑—É "–ø–æ–∫—É–ø–∞–µ–º" –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Adapty
      if (isEmulator) {
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ –≠–ú–£–õ–Ø–¢–û–†: –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –ø–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏: $productId',
        );

        // [AdaptyRepositoryImpl] –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ "–∫—É–ø–ª–µ–Ω–Ω–æ–π" –ø–æ–¥–ø–∏—Å–∫–µ
        await _storage.write(key: _emulatorSubscriptionKey, value: 'true');
        await _storage.write(
          key: _emulatorSubscriptionProductKey,
          value: productId,
        );
        await _storage.write(
          key: _emulatorSubscriptionDateKey,
          value: DateTime.now().toIso8601String(),
        );

        // [AdaptyRepositoryImpl] –¢—Ä–µ–∫–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —Ñ–µ–π–∫–æ–≤–æ–π –ø–æ–∫—É–ø–∫–∏
        await _trackPurchaseEvent(productId);
        await trackEvent(
          'emulator_fake_purchase',
          parameters: {
            'product_id': productId,
            'timestamp': DateTime.now().toIso8601String(),
            'platform': Platform.operatingSystem,
          },
        );

        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ –≠–ú–£–õ–Ø–¢–û–†: –§–µ–π–∫–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!',
        );
        return true;
      }

      debugPrint(
        '[AdaptyRepositoryImpl] üì± –†–ï–ê–õ–¨–ù–û–ï –£–°–¢–†–û–ô–°–¢–í–û: –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—É—é –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ Adapty',
      );

      // –ü–æ–ª—É—á–∞–µ–º paywall –∏ –ø—Ä–æ–¥—É–∫—Ç—ã
      final paywall = await Adapty().getPaywall(
        placementId: _paywallPlacementId,
      );
      final products = await Adapty().getPaywallProducts(paywall: paywall);

      final product = products.firstWhere(
        (p) => p.vendorProductId == productId,
        orElse: () => throw Exception('–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: $productId'),
      );

      // –°–æ–≤–µ—Ä—à–∞–µ–º –ø–æ–∫—É–ø–∫—É
      final result = await Adapty().makePurchase(product: product);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫—É–ø–∫–∏
      switch (result) {
        case AdaptyPurchaseResultSuccess(profile: final profile):
          if (profile.accessLevels[_premiumAccessLevel]?.isActive ?? false) {
            debugPrint('[AdaptyRepositoryImpl] –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            await _trackPurchaseEvent(productId);
            return true;
          } else {
            debugPrint(
              '[AdaptyRepositoryImpl] –ü–æ–∫—É–ø–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫—É',
            );
            return false;
          }
        case AdaptyPurchaseResultUserCancelled():
          debugPrint('[AdaptyRepositoryImpl] –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
          return false;
        case AdaptyPurchaseResultPending():
          debugPrint('[AdaptyRepositoryImpl] –ü–æ–∫—É–ø–∫–∞ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏');
          return false;
      }
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: $e');
      return false;
    }
  }

  @override
  Future<bool> restorePurchases() async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫...');

      final profile = await Adapty().restorePurchases();
      final isActive =
          profile.accessLevels[_premiumAccessLevel]?.isActive ?? false;

      if (isActive) {
        debugPrint('[AdaptyRepositoryImpl] –ü–æ–∫—É–ø–∫–∏ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        await trackEvent('restore_purchases_success');
      } else {
        debugPrint('[AdaptyRepositoryImpl] –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        await trackEvent('restore_purchases_no_active');
      }

      return isActive;
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫: $e');
      await trackEvent(
        'restore_purchases_error',
        parameters: {'error': e.toString()},
      );
      return false;
    }
  }

  @override
  Future<void> decrementFreeRequests() async {
    try {
      final currentCount = await _getRemainingFreeRequests();
      if (currentCount > 0) {
        final newCount = currentCount - 1;
        await _storage.write(
          key: _freeRequestsCountKey,
          value: newCount.toString(),
        );
        debugPrint(
          '[AdaptyRepositoryImpl] –°—á–µ—Ç—á–∏–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —É–º–µ–Ω—å—à–µ–Ω –¥–æ: $newCount',
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        await trackEvent(
          'free_request_used',
          parameters: {'remaining_requests': newCount},
        );
      }
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞: $e');
    }
  }

  @override
  Future<bool> canMakeRequest() async {
    try {
      final status = await getSubscriptionStatus();
      final canMake = status.canMakeRequest;

      debugPrint(
        '[AdaptyRepositoryImpl] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞: $canMake',
      );
      debugPrint(
        '[AdaptyRepositoryImpl] –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: ${status.hasPremiumAccess}',
      );
      debugPrint(
        '[AdaptyRepositoryImpl] –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–ø—Ä–æ—Å—ã: ${status.remainingFreeRequests}',
      );

      return canMake;
    } on Exception catch (e) {
      debugPrint(
        '[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞: $e',
      );
      return false;
    }
  }

  @override
  Future<Map<String, dynamic>?> getPaywallConfiguration() async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ paywall...');

      final paywall = await Adapty().getPaywall(
        placementId: _paywallPlacementId,
      );

      return {
        'placement_id': paywall.placementId,
        'revision': paywall.revision,
        'remote_config': paywall.remoteConfig,
      };
    } on Exception catch (e) {
      debugPrint(
        '[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ paywall: $e',
      );
      return null;
    }
  }

  @override
  Future<void> trackEvent(
    String eventName, {
    Map<String, dynamic>? parameters,
  }) async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è: $eventName');

      // –í Adapty 3.x —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ logShowPaywall –∏ –¥—Ä—É–≥–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã
      // –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º updateProfile —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
      if (parameters != null) {
        final builder =
            AdaptyProfileParametersBuilder()
              ..setCustomStringAttribute('last_event', eventName)
              ..setCustomStringAttribute(
                DateTime.now().toIso8601String(),
                'last_event_time',
              );

        for (final entry in parameters.entries) {
          builder.setCustomStringAttribute(
            entry.value.toString(),
            'event_${entry.key}',
          );
        }

        await Adapty().updateProfile(builder.build());
      }

      debugPrint('[AdaptyRepositoryImpl] –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: $eventName');
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è: $e');
    }
  }

  @override
  Future<void> setUserAttributes(Map<String, dynamic> attributes) async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

      final builder = AdaptyProfileParametersBuilder();

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
      if (attributes.containsKey('email')) {
        builder.setEmail(attributes['email'] as String);
      }
      if (attributes.containsKey('phone')) {
        builder.setPhoneNumber(attributes['phone'] as String);
      }
      if (attributes.containsKey('first_name')) {
        builder.setFirstName(attributes['first_name'] as String);
      }
      if (attributes.containsKey('last_name')) {
        builder.setLastName(attributes['last_name'] as String);
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
      for (final entry in attributes.entries) {
        if (![
          'email',
          'phone',
          'first_name',
          'last_name',
        ].contains(entry.key)) {
          if (entry.value is String) {
            builder.setCustomStringAttribute(entry.value as String, entry.key);
          } else if (entry.value is num) {
            builder.setCustomDoubleAttribute(
              (entry.value as num).toDouble(),
              entry.key,
            );
          } else {
            builder.setCustomStringAttribute(entry.value.toString(), entry.key);
          }
        }
      }

      await Adapty().updateProfile(builder.build());
      debugPrint('[AdaptyRepositoryImpl] –ê—Ç—Ä–∏–±—É—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤: $e');
    }
  }

  @override
  Future<String?> getUserId() async {
    try {
      final profile = await Adapty().getProfile();
      return profile.profileId;
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
      return null;
    }
  }

  @override
  Future<void> logout() async {
    try {
      debugPrint('[AdaptyRepositoryImpl] –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

      await Adapty().logout();

      // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      await _storage.delete(key: _subscriptionStatusKey);
      await _storage.write(
        key: _freeRequestsCountKey,
        value: _maxFreeRequests.toString(),
      );

      // [AdaptyRepositoryImpl] –û—á–∏—â–∞–µ–º —Ñ–µ–π–∫–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ
      if (_isRunningOnEmulator) {
        await _storage.delete(key: _emulatorSubscriptionKey);
        await _storage.delete(key: _emulatorSubscriptionProductKey);
        await _storage.delete(key: _emulatorSubscriptionDateKey);
        debugPrint(
          '[AdaptyRepositoryImpl] ü§ñ –≠–ú–£–õ–Ø–¢–û–†: –§–µ–π–∫–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ',
        );
      }

      debugPrint('[AdaptyRepositoryImpl] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: $e');
    }
  }

  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  Future<int> _getRemainingFreeRequests() async {
    final countStr = await _storage.read(key: _freeRequestsCountKey);
    if (countStr == null) {
      await _storage.write(
        key: _freeRequestsCountKey,
        value: _maxFreeRequests.toString(),
      );
      return _maxFreeRequests;
    }
    return int.tryParse(countStr) ?? _maxFreeRequests;
  }

  /// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ access level
  String _getSubscriptionType(AdaptyAccessLevel accessLevel) {
    // –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö Adapty
    // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å vendorProductId –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—è
    return 'premium'; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —ç–º—É–ª—è—Ç–æ—Ä–∞ –ø–æ product ID
  /// [AdaptyRepositoryImpl] –ú–∞–ø–ø–∏–Ω–≥ product ID –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —ç–º—É–ª—è—Ç–æ—Ä–∞
  String _getEmulatorSubscriptionType(String productId) {
    if (productId.toLowerCase().contains('one_month') ||
        productId.toLowerCase().contains('monthly')) {
      return 'monthly';
    } else if (productId.toLowerCase().contains('three_months') ||
        productId.toLowerCase().contains('quarterly')) {
      return 'quarterly';
    } else if (productId.toLowerCase().contains('annual') ||
        productId.toLowerCase().contains('yearly')) {
      return 'yearly';
    } else {
      return 'premium'; // [AdaptyRepositoryImpl] –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    }
  }

  /// –ú–∞–ø–ø–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–∞ Adapty –≤ –Ω–∞—à—É –º–æ–¥–µ–ª—å
  SubscriptionProduct? _mapAdaptyProductToSubscriptionProduct(
    AdaptyPaywallProduct product,
  ) {
    try {
      final productId = product.vendorProductId;
      final basePrice = product.price.localizedString;
      final currencyCode = product.price.currencyCode;
      final amount = product.price.amount;

      debugPrint(
        '[AdaptyRepositoryImpl] üîç –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: ${product.subscription?.offer?.identifier.type}',
      );
      debugPrint(
        '[AdaptyRepositoryImpl] üîç –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: ${product.subscription?.offer?.phases}',
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ null –∑–Ω–∞—á–µ–Ω–∏—è
      if (currencyCode == null || basePrice == null) {
        debugPrint(
          '[AdaptyRepositoryImpl] ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç currencyCode –∏–ª–∏ price –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞: $productId',
        );
        return null;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫–∏–¥–æ—á–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
      bool hasDiscount = false;
      String? discountPrice;
      String? originalPrice;
      int? discountPriceAmountMicros;

      final subscription = product.subscription;
      final offer = subscription?.offer;

      if (offer != null &&
          offer.identifier.type == AdaptySubscriptionOfferType.introductory) {
        final phases = offer.phases;
        if (phases.isNotEmpty) {
          // –ï—Å—Ç—å —Å–∫–∏–¥–æ—á–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
          hasDiscount = true;
          final firstPhase = phases.first;
          discountPrice = firstPhase.price.localizedString;
          discountPriceAmountMicros =
              (firstPhase.price.amount * 1000000).toInt();
          originalPrice = basePrice; // –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π

          debugPrint(
            '[AdaptyRepositoryImpl] üí∏ –ù–∞–π–¥–µ–Ω–∞ —Å–∫–∏–¥–∫–∞: $discountPrice (–æ—Ä–∏–≥–∏–Ω–∞–ª: $originalPrice)',
          );
        }
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∏ amount micros
      final finalPrice = hasDiscount ? discountPrice! : basePrice;
      final finalPriceAmountMicros =
          hasDiscount ? discountPriceAmountMicros! : (amount * 1000000).toInt();

      debugPrint(
        '[AdaptyRepositoryImpl] üí∞ Final price: $finalPrice, amount micros: $finalPriceAmountMicros',
      );

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ ID –ø—Ä–æ–¥—É–∫—Ç–∞
      if (productId.toLowerCase().contains('one_month')) {
        debugPrint('[AdaptyRepositoryImpl] üìÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞');
        final baseProduct = SubscriptionProduct.monthly(
          productId: productId,
          price: finalPrice,
          priceAmountMicros: finalPriceAmountMicros,
          currencyCode: currencyCode,
        );

        return hasDiscount
            ? baseProduct.copyWith(
              originalPrice: originalPrice,
              isRecommended: true,
              description: 'È¶ñÊúàÁâπÊÉ† ÁÑ∂Âêé $originalPrice',
            )
            : baseProduct;
      } else if (productId.toLowerCase().contains('annual')) {
        debugPrint('[AdaptyRepositoryImpl] üìÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –≥–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞');
        final baseProduct = SubscriptionProduct.yearly(
          productId: productId,
          price: finalPrice,
          priceAmountMicros: finalPriceAmountMicros,
          currencyCode: currencyCode,
        );

        return hasDiscount
            ? baseProduct.copyWith(
              originalPrice: originalPrice,
              isRecommended: true,
              description: 'È¶ñÂπ¥ÁâπÊÉ† ÁÑ∂Âêé $originalPrice',
            )
            : baseProduct;
      } else if (productId.toLowerCase().contains('three_months')) {
        debugPrint(
          '[AdaptyRepositoryImpl] üìÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ —Ç—Ä–µ—Ö–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞',
        );
        return SubscriptionProduct(
          productId: productId,
          title: '3‰∏™Êúà',
          description: hasDiscount ? 'È¶ñÊúàÁâπÊÉ†' : '¬•19.3ÊØèÊúà',
          price: finalPrice,
          priceAmountMicros: finalPriceAmountMicros,
          currencyCode: currencyCode,
          subscriptionPeriod: 'quarterly',
          hasFreeTrial: false,
          pricePerPeriod: finalPrice,
          originalPrice: hasDiscount ? originalPrice : null,
          isRecommended: hasDiscount,
        );
      } else {
        // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
        debugPrint(
          '[AdaptyRepositoryImpl] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–¥—É–∫—Ç–∞, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π: $productId',
        );
        return SubscriptionProduct(
          productId: productId,
          title: 'ËÆ¢ÈòÖ',
          description: hasDiscount ? 'ÁâπÊÉ†‰ª∑Ê†º' : 'È´òÁ∫ßËÆ¢ÈòÖ',
          price: finalPrice,
          priceAmountMicros: finalPriceAmountMicros,
          currencyCode: currencyCode,
          subscriptionPeriod: 'unknown',
          hasFreeTrial: false,
          pricePerPeriod: finalPrice,
          originalPrice: hasDiscount ? originalPrice : null,
          isRecommended: hasDiscount,
        );
      }
    } on Exception catch (e) {
      debugPrint('[AdaptyRepositoryImpl] ‚ùå –û—à–∏–±–∫–∞ –º–∞–ø–ø–∏–Ω–≥–∞ –ø—Ä–æ–¥—É–∫—Ç–∞: $e');
      return null;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–ª—É—à–µ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  List<SubscriptionProduct> _getMockProducts() {
    return [
      SubscriptionProduct.monthly(
        productId: 'one_month',
        price: '¬•68',
        priceAmountMicros: 68000000,
        currencyCode: 'CNY',
      ),
      const SubscriptionProduct(
        productId: 'three_months',
        title: '3‰∏™Êúà',
        description: 'ÊåâÂ≠£Â∫¶ËÆ¢ÈòÖÔºå‰∫´Âèó‰ºòÊÉ†',
        price: '¬•188',
        priceAmountMicros: 188000000,
        currencyCode: 'CNY',
        subscriptionPeriod: 'quarterly',
        hasFreeTrial: false,
        pricePerPeriod: '¬•188/3‰∏™Êúà',
        discountPercentage: 15,
      ),
      SubscriptionProduct.yearly(
        productId: 'annual',
        price: '¬•588',
        priceAmountMicros: 588000000,
        currencyCode: 'CNY',
        discountPercentage: 30,
      ),
    ];
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –æ –ø–æ–∫—É–ø–∫–µ
  Future<void> _trackPurchaseEvent(String productId) async {
    await trackEvent(
      'subscription_purchased',
      parameters: {
        'product_id': productId,
        'timestamp': DateTime.now().toIso8601String(),
      },
    );
  }

  /// –û—á–∏—Å—Ç–∫–∞ —Ñ–µ–π–∫–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  /// [AdaptyRepositoryImpl] –ú–µ—Ç–æ–¥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ
  @visibleForTesting
  Future<void> clearEmulatorSubscription() async {
    if (_isRunningOnEmulator) {
      await _storage.delete(key: _emulatorSubscriptionKey);
      await _storage.delete(key: _emulatorSubscriptionProductKey);
      await _storage.delete(key: _emulatorSubscriptionDateKey);
      debugPrint(
        '[AdaptyRepositoryImpl] ü§ñ –≠–ú–£–õ–Ø–¢–û–†: –§–µ–π–∫–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é',
      );

      await trackEvent(
        'emulator_subscription_cleared',
        parameters: {
          'timestamp': DateTime.now().toIso8601String(),
          'platform': Platform.operatingSystem,
        },
      );
    } else {
      debugPrint(
        '[AdaptyRepositoryImpl] ‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∏—Ç—å —Ñ–µ–π–∫–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–µ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ',
      );
    }
  }
}
